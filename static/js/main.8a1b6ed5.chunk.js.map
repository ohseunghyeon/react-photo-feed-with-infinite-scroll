{"version":3,"sources":["assets/checkbox_checked.svg","assets/checkbox_unchecked.svg","assets/scrap_on.svg","assets/scrap_off.svg","components/ScrapFilter.js","components/Feed.js","components/Feeds.js","hooks/useFeeds.js","hooks/useScrapList.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Wrapper","styled","div","_templateObject","FilterButton","img","_templateObject2","Text","span","_templateObject3","ScrapFilter","_ref","isFiltered","setIsFilterd","react_default","a","createElement","onClick","src","checkbox_checked","checkbox_unchecked","alt","Feed_templateObject","Profile","Feed_templateObject2","ProfileAvatar","Feed_templateObject3","ProfileNickname","_templateObject4","Img","_templateObject5","ScrapButton","_templateObject6","Feed","feed","isScrapped","setScrapList","Feed_Wrapper","profile_image_url","nickname","image_url","scrapButtonOnSvg","scrapButtonOffSvg","list","Object","objectSpread","defineProperty","id","Feeds_templateObject","List","Feeds_templateObject2","FeedList","_useState","useState","_useState2","slicedToArray","page","setPage","increasePage","useCallback","_useState3","_useState4","_useFeeds","feeds","setFeeds","hasMore","setHasMore","useEffect","asyncToGenerator","regenerator_default","mark","_callee","data","newFeeds","wrap","_context","prev","next","fetch","concat","sent","json","length","stop","apply","this","arguments","requestFeeds","scrollheight","Math","max","document","documentElement","scrollHeight","body","scrollTop","clientHeight","useFeeds","_useFeeds2","_useScrapList","storedScrapList","localStorage","getItem","JSON","parse","scrapList","setItem","stringify","useScrapList","_useScrapList2","Feeds_Wrapper","components_ScrapFilter","lib_default","dataLength","filter","map","components_Feed","key","App","className","Feeds","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.8a1b6ed5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/checkbox_checked.8753c397.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkbox_unchecked.9efa55af.svg\";","module.exports = __webpack_public_path__ + \"static/media/scrap_on.be2a9f76.svg\";","module.exports = __webpack_public_path__ + \"static/media/scrap_off.0c7e34a2.svg\";","import React from 'react';\nimport styled from 'styled-components';\n\nimport checkbox_checked from '../assets/checkbox_checked.svg';\nimport checkbox_unchecked from '../assets/checkbox_unchecked.svg';\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 32px;\n  cursor: pointer;\n`;\n\nconst FilterButton = styled.img`\n  width: 24px;\n  height: 24px;\n  margin-right: 6px;\n`;\n\nconst Text = styled.span`\n  width: 244px;\n  // font-family: AppleSDGothicNeo;\n  color: #424242;\n`;\n\nfunction ScrapFilter({ isFiltered, setIsFilterd }) {\n  return (\n    <Wrapper\n      onClick={() => setIsFilterd(!isFiltered)}\n    >\n      <FilterButton\n        src={isFiltered ? checkbox_checked : checkbox_unchecked}\n        alt='scrap switch'\n      />\n      <Text>스크랩한 것만 보기</Text>\n    </Wrapper>\n  )\n}\n\nexport default ScrapFilter;","import React from 'react';\nimport styled from 'styled-components';\n\nimport scrapButtonOnSvg from '../assets/scrap_on.svg';\nimport scrapButtonOffSvg from '../assets/scrap_off.svg';\n\nconst Wrapper = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  padding-right: 20px;\n  padding-bottom: 30px;\n`;\n\nconst Profile = styled.div`\n  display: flex;\n  align-items: center;\n  height: 36px;\n  margin-bottom: 10px;\n`;\n\nconst ProfileAvatar = styled.img`\n  width: 36px;\n  height: 36px;\n  margin-right: 10px;\n`;\n\nconst ProfileNickname = styled.span`\n  height: 19px;\n  // font-family: AppleSDGothicNeo;\n  font-size: 15px;\n  font-weight: bold;\n  line-height: 1.27;\n  color: rgba(0, 0, 0, 0.74);\n`;\n\nconst Img = styled.img`\n  width: 268px;\n  height: 268px;\n  border-radius: 10px;\n`;\n\nconst ScrapButton = styled.img`\n  position: absolute;\n  width: 32px;\n  height: 32px;\n  right: 30px;\n  bottom: 40px;\n  cursor: pointer;\n`;\n\nfunction Feed({ feed, isScrapped, setScrapList }) {\n  return (\n    <Wrapper>\n      <Profile>\n        <ProfileAvatar\n          src={feed.profile_image_url}\n          alt='profile avatar'\n        />\n        <ProfileNickname>{feed.nickname}</ProfileNickname>\n      </Profile>\n\n      <Img src={feed.image_url} />\n      <ScrapButton\n        src={isScrapped ? scrapButtonOnSvg : scrapButtonOffSvg}\n        alt='scrap button'\n        onClick={() =>\n          setScrapList(list => ({\n            ...list,\n            [feed.id]: !list[feed.id]\n          }))\n        }\n      />\n    </Wrapper>\n  )\n}\n\nexport default Feed;","import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport { useScrapList, useFeeds } from '../hooks/index';\n\nimport ScrapFilter from './ScrapFilter';\nimport Feed from './Feed';\n\nconst Wrapper = styled.div`\n  padding: 30px 20px 0 40px;\n  font-size: 15px;\n`;\n\nconst List = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nfunction FeedList() {\n  const [page, setPage] = useState(1);\n  const increasePage = useCallback(() => setPage(page + 1), [page]);\n  const [isFiltered, setIsFilterd] = useState(false);\n  const [feeds, hasMore] = useFeeds(page, increasePage);\n  const [scrapList, setScrapList] = useScrapList();\n\n  return (\n    <Wrapper>\n      <ScrapFilter\n        isFiltered={isFiltered}\n        setIsFilterd={setIsFilterd}\n      />\n\n      <InfiniteScroll\n        dataLength={feeds.length}\n        next={increasePage}\n        hasMore={hasMore}\n      >\n        <List>\n          {feeds\n            .filter(feed => !isFiltered ? true : scrapList[feed.id])\n            .map(feed => (\n              <Feed\n                key={feed.id}\n                feed={feed}\n                isScrapped={scrapList[feed.id]}\n                setScrapList={setScrapList}\n              />\n            ))}\n        </List>\n      </InfiniteScroll>\n    </Wrapper>\n  );\n}\n\nexport default FeedList;","import { useState, useEffect } from 'react';\n\n// custom hook for feeds\nexport default function useFeeds(page, increasePage) {\n  const [feeds, setFeeds] = useState([]);\n  const [hasMore, setHasMore] = useState(true); // option value for infinite scroll \n\n  useEffect(\n    () => {\n      const requestFeeds = async () => {\n        const data = await fetch(`https://s3.ap-northeast-2.amazonaws.com/bucketplace-coding-test/cards/page_${page}.json`);\n        const newFeeds = await data.json();\n\n        newFeeds.length\n          ? setFeeds(feeds => feeds.concat(newFeeds))\n          : setHasMore(false);\n      };\n\n      requestFeeds();\n    },\n    [page]\n  );\n\n  useEffect(\n    () => {\n      const scrollheight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);\n      const scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\n      const clientHeight = document.documentElement.clientHeight;\n\n      if (feeds.length > 0 && scrollTop + clientHeight === scrollheight) {\n        increasePage();\n      }\n    },\n    [feeds, increasePage]\n  )\n\n  return [feeds, hasMore]\n}","import { useState, useEffect } from 'react';\n\n// custom hook for scrap list\nexport default function useScrapList() {\n  let storedScrapList = localStorage.getItem('scrapList');\n  storedScrapList = storedScrapList ? JSON.parse(storedScrapList) : {};\n\n  const [scrapList, setScrapList] = useState(storedScrapList);\n\n  useEffect(\n    () => localStorage.setItem('scrapList', JSON.stringify(scrapList)),\n    [scrapList],\n  );\n\n  return [scrapList, setScrapList];\n}","import React from 'react';\nimport Feeds from './components/Feeds';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Feeds />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}